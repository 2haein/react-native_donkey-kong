{"version":3,"sources":["renderers.js","systems.js","App.js"],"names":["Finger","x","this","props","position","RADIUS","y","View","style","styles","finger","left","top","PureComponent","StyleSheet","create","borderColor","borderWidth","borderRadius","width","height","backgroundColor","MoveFinger","entities","touches","filter","t","type","forEach","id","delta","pageX","pageY","BestGameEver","container","systems","1","renderer","2","3","4","5","StatusBar","hidden","flex","AppRegistry","registerComponent"],"mappings":"2qBAGA,IAEMA,E,qIAEF,IAAMC,EAAIC,KAAKC,MAAMC,SAAS,GAAKC,GAC7BC,EAAIJ,KAAKC,MAAMC,SAAS,GAAKC,GACnC,OACE,kBAACE,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,OAAQ,CAAEC,KAAMV,EAAGW,IAAKN,U,GAL9BO,iBAUfJ,EAASK,IAAWC,OAAO,CAC/BL,OAAQ,CACNM,YAAa,OACbC,YAAa,EACbC,aAAcb,GACdc,MAAOd,GACPe,OAAQf,GACRgB,gBAAiB,OACjBjB,SAAU,cCvBRkB,EAAa,SAACC,EAAD,GAiBf,OAjB0C,EAAdC,QAOpBC,QAAO,SAAAC,GAAC,MAAe,SAAXA,EAAEC,QAAiBC,SAAQ,SAAAF,GAC7C,IAAIhB,EAASa,EAASG,EAAEG,IACpBnB,GAAUA,EAAON,WACnBM,EAAON,SAAW,CAChBM,EAAON,SAAS,GAAKsB,EAAEI,MAAMC,MAC7BrB,EAAON,SAAS,GAAKsB,EAAEI,MAAME,WAK5BT,G,8aCOUU,E,gCACnB,aAAe,gC,6CAKb,OACE,kBAAC,IAAD,CACEzB,MAAOC,EAAOyB,UACdC,QAAS,CAACb,GACVC,SAAU,CACRa,EAAG,CAAEhC,SAAU,CAAC,GAAK,KAAMiC,SAAU,kBAAC,EAAD,OACrCC,EAAG,CAAElC,SAAU,CAAC,IAAK,KAAMiC,SAAU,kBAAC,EAAD,OACrCE,EAAG,CAAEnC,SAAU,CAAC,IAAK,KAAMiC,SAAU,kBAAC,EAAD,OACrCG,EAAG,CAAEpC,SAAU,CAAC,IAAK,KAAMiC,SAAU,kBAAC,EAAD,OACrCI,EAAG,CAAErC,SAAU,CAAC,IAAK,KAAMiC,SAAU,kBAAC,EAAD,SAGvC,kBAACK,EAAA,EAAD,CAAWC,QAAQ,S,GAlBe9B,iBAyBpCJ,EAASK,IAAWC,OAAO,CAC/BmB,UAAW,CACTU,KAAM,EACNvB,gBAAiB,UAIrBwB,IAAYC,kBAAkB,gBAAgB,kBAAMb,M","file":"static/js/app.01ec643f.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n \r\nconst RADIUS = 20;\r\n \r\nclass Finger extends PureComponent {\r\n  render() {\r\n    const x = this.props.position[0] - RADIUS / 2;\r\n    const y = this.props.position[1] - RADIUS / 2;\r\n    return (\r\n      <View style={[styles.finger, { left: x, top: y }]} />\r\n    );\r\n  }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n  finger: {\r\n    borderColor: \"#CCC\",\r\n    borderWidth: 4,\r\n    borderRadius: RADIUS * 2,\r\n    width: RADIUS * 2,\r\n    height: RADIUS * 2,\r\n    backgroundColor: \"pink\",\r\n    position: \"absolute\"\r\n  }\r\n});\r\n \r\nexport { Finger };","const MoveFinger = (entities, { touches }) => {\r\n \r\n    //-- I'm choosing to update the game state (entities) directly for the sake of brevity and simplicity.\r\n    //-- There's nothing stopping you from treating the game state as immutable and returning a copy..\r\n    //-- Example: return { ...entities, t.id: { UPDATED COMPONENTS }};\r\n    //-- That said, it's probably worth considering performance implications in either case.\r\n   \r\n    touches.filter(t => t.type === \"move\").forEach(t => {\r\n      let finger = entities[t.id];\r\n      if (finger && finger.position) {\r\n        finger.position = [\r\n          finger.position[0] + t.delta.pageX,\r\n          finger.position[1] + t.delta.pageY\r\n        ];\r\n      }\r\n    });\r\n   \r\n    return entities;\r\n  };\r\n   \r\n  export { MoveFinger };","// import { StatusBar } from 'expo-status-bar';\n// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n\n// export default function App() {\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.js to start working on your app!</Text>\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// export default class App extends React.Component {\n//   render() {\n//   }\n// }\n\nimport React, { PureComponent } from \"react\";\nimport { AppRegistry, StyleSheet, StatusBar } from \"react-native\";\nimport { GameEngine } from \"react-native-game-engine\";\nimport { Finger } from \"./renderers\";\nimport { MoveFinger } from \"./systems\"\n \nexport default class BestGameEver extends PureComponent {\n  constructor() {\n    super();\n  }\n \n  render() {\n    return (\n      <GameEngine\n        style={styles.container}\n        systems={[MoveFinger]}\n        entities={{\n          1: { position: [40,  200], renderer: <Finger />}, //-- Notice that each entity has a unique id (required)\n          2: { position: [100, 200], renderer: <Finger />}, //-- and a renderer property (optional). If no renderer\n          3: { position: [160, 200], renderer: <Finger />}, //-- is supplied with the entity - it won't get displayed.\n          4: { position: [220, 200], renderer: <Finger />},\n          5: { position: [280, 200], renderer: <Finger />}\n        }}>\n \n        <StatusBar hidden={true} />\n \n      </GameEngine>\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\"\n  }\n});\n \nAppRegistry.registerComponent(\"BestGameEver\", () => BestGameEver);"],"sourceRoot":""}